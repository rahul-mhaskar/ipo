const monthMap = {
  "jan": 0, "feb": 1, "mar": 2, "apr": 3, "may": 4, "jun": 5,
  "jul": 6, "aug": 7, "sep": 8, "oct": 9, "nov": 10, "dec": 11
};

export const parseDateForSort = (dateString) => {
  if (!dateString || typeof dateString !== 'string') return null;
  const cleanedDateString = dateString.trim();
  const fullDate = new Date(cleanedDateString);
  if (!isNaN(fullDate.getTime())) return fullDate;

  const parts = cleanedDateString.split(' ');
  if (parts.length >= 2) {
    const day = parseInt(parts[0], 10);
    const monthName = parts[1].toLowerCase().substring(0, 3);
    const month = monthMap[monthName];
    if (!isNaN(day) && month !== undefined) {
      const currentYear = new Date().getFullYear();
      let yearToUse = currentYear;
      const today = new Date();
      if (month < today.getMonth() || (month === today.getMonth() && day < today.getDate())) {
        yearToUse = currentYear + 1;
      }
      const parsedDate = new Date(yearToUse, month, day);
      if (!isNaN(parsedDate.getTime())) return parsedDate;
    }
  }
  return null;
};

export const getStatusContent = (status, ipo, onApplyClick, onAllotmentClick) => {
  const cleanStatus = status ? String(status).toLowerCase() : '';
  if (cleanStatus.includes("apply") || cleanStatus.includes("open")) {
    return (
      <span className="text-blue-600 cursor-pointer hover:underline font-semibold" onClick={onApplyClick}>
        🚀 {status}
      </span>
    );
  } else if (cleanStatus.includes("pre")) {
    return <span className="text-purple-600 font-semibold">🛒 {status}</span>;
  } else if (cleanStatus.includes("pending")) {
    return <span className="text-yellow-600 font-semibold">🕒 {status}</span>;
  } else if (cleanStatus.includes("allotment")) {
    return (
      <span className="text-green-600 hover:underline cursor-pointer font-semibold" onClick={() => onAllotmentClick(ipo)}>
        ✅ {status}
      </span>
    );
  } else if (cleanStatus.includes("listed") || cleanStatus.includes("closed")) {
    return <span className="text-indigo-700 font-semibold">📈 {status}</span>;
  } else {
    return <span className="text-gray-500 font-semibold">📅 {status}</span>;
  }
};

export const getIpoStatusClass = (status) => {
  const cleanStatus = status ? String(status).toLowerCase() : '';
  if (cleanStatus.includes('open') || cleanStatus.includes('apply')) {
    return 'bg-blue-100 text-blue-800';
  } else if (cleanStatus.includes('closed') || cleanStatus.includes('listed') || cleanStatus.includes('allotment')) {
    return 'bg-green-100 text-green-800';
  } else {
    return 'bg-purple-100 text-purple-800';
  }
};

export const getSortDirection = (sortConfig, header) => {
  if (sortConfig.key === header) {
    return sortConfig.direction === "asc" ? "▲" : "▼";
  }
  return "⬍";
};
